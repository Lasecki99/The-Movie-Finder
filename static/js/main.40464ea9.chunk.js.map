{"version":3,"sources":["img/react.png","fetchUrls/fetchUrls.js","contexts/GetDataContext.js","components/Spinner.js","contexts/SearchMovieContext.js","components/Home.js","components/SeeDetails.js","CarouselSettings/CarouselSettings.js","components/Upcoming.js","components/Popular.js","components/TopRated.js","components/MoviesWithTomHanks.js","contexts/FormContext.js","components/SearchList.js","components/Form.js","components/Footer.js","components/App.js","index.js"],"names":["module","exports","dataUrl","URL","process","name","GetData","createContext","GetDataProvider","props","useState","homeMovies","setHomeMovies","genres","setGenres","upcomingMovies","setUpcomingMovies","popularMovies","setPopularMovies","topRated","setTopRated","moviesWithTomHanks","setMoviesWithTomHanks","isInited","setIsInited","useEffect","map","item","fetch","then","res","json","data","cast","results","length","Provider","value","children","Spinner","className","SearchMovie","SearchMovieProvider","oneMovie","setOneMovie","getClickedMovie","movieID","document","querySelector","classList","add","response","details","release_date","production","undefined","production_companies","runtime","rating","vote_average","budget","revenue","title","overview","backdrop","backdrop_path","handleCloseDetails","remove","Home","useContext","movie","id","key","src","alt","onClick","showIndicators","showThumbs","showStatus","infiniteLoop","autoPlay","seeDetails","genresInfo","style","backgroundImage","reactImage","settings","dots","slidesToShow","speed","slidesToScroll","responsive","breakpoint","Upcoming","index","findIndex","genre_ids","poster_path","Popular","TopRated","MoviesWithTomHanks","FormContext","FormContextProvider","inputValue","setInputValue","searchMovies","setSearchMovies","handleSearch","display","window","location","href","alert","preventRefresh","e","preventDefault","SearchList","result","Form","onSubmit","onChange","target","placeholder","type","to","Footer","App","path","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.40464ea9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react.b03c571c.png\";","export const dataUrl = [\n    { URL: `https://api.themoviedb.org/3/person/31/combined_credits?api_key=${process.env.REACT_APP_API}&language=en-US`, name: 'moviesWithTomHanks' },\n    { URL: `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_API}&language=en-US&page=1`, name: 'upcomingMovies' },\n    { URL: `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API}&language=en-US&page=1`, name: 'popularMovies' },\n    { URL: `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_API}&language=en-US&page=1`, name: 'topRatedMovies' },\n    { URL: `https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_API}&language=en-US&page=1.json`, name: 'homeMovies' },\n    { URL: `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API}&language=en-US.json`, name: 'genresList' }\n]","import React, { createContext, useState, useEffect } from 'react';\nimport { dataUrl } from '../fetchUrls/fetchUrls';\n\nexport const GetData = createContext();\n\nconst GetDataProvider = (props) => {\n   const [homeMovies, setHomeMovies] = useState([]);\n   const [genres, setGenres] = useState([]);\n   const [upcomingMovies, setUpcomingMovies] = useState([]);\n   const [popularMovies, setPopularMovies] = useState([]);\n   const [topRated, setTopRated] = useState([]);\n   const [moviesWithTomHanks, setMoviesWithTomHanks] = useState([]);\n   const [isInited, setIsInited] = useState(false);\n\n   useEffect(() => {\n      if (!isInited) {\n         dataUrl.map(item => {\n            const { URL, name } = item;\n            fetch(URL)\n               .then(res => res.json())\n               .then(data => {\n                  switch (name) {\n                     case 'moviesWithTomHanks':\n                        setMoviesWithTomHanks(data.cast);\n                        break;\n                     case 'upcomingMovies':\n                        setUpcomingMovies(data);\n                        break;\n                     case 'popularMovies':\n                        setPopularMovies(data);\n                        break;\n                     case 'topRatedMovies':\n                        setTopRated(data);\n                        break;\n                     case 'homeMovies':\n                        setHomeMovies(data.results);\n                        break;\n                     case 'genresList':\n                        setGenres(data.genres);\n                        break;\n                     default:\n                        break;\n                  }\n               })\n         })\n      }\n   }, [isInited])\n\n   if (moviesWithTomHanks.length !== 0 && upcomingMovies.length !== 0 && popularMovies.length !== 0 && topRated.length !== 0 && homeMovies.length !== 0 && genres.length !== 0) {\n      if (!isInited) setIsInited(true);\n   }\n\n   return (\n      <GetData.Provider value={{ homeMovies, genres, popularMovies, topRated, upcomingMovies, moviesWithTomHanks, isInited }}>\n         {props.children}\n      </GetData.Provider>\n   );\n}\n\nexport default GetDataProvider;","import React from 'react';\nimport '../styles/Spinner.css'\n\nconst Spinner = () => {\n    return (\n        <div className=\"background-spinner\">\n            <div className=\"loader\">Loading...</div>\n        </div>\n    );\n}\nexport default Spinner;","import React, { createContext, useState } from 'react';\n\nexport const SearchMovie = createContext();\n\n\nconst SearchMovieProvider = (props) => {\n\n    const [oneMovie, setOneMovie] = useState(['1']);\n\n    const getClickedMovie = movieID => {\n        //open details window\n        document.querySelector('div.details').classList.add('active');\n        const URL = `https://api.themoviedb.org/3/movie/${movieID}?api_key=30406056042449abcb3b86e3f1b631cd&language=en-US`;\n        fetch(URL)\n            .then(response => response.json())\n            .then(data => {\n                const details = {\n                    release_date: data.release_date,\n                    production: data.production_companies[0] === undefined ? null : data.production_companies[0].name,\n                    runtime: data.runtime,\n                    rating: data.vote_average,\n                    budget: data.budget,\n                    revenue: data.revenue,\n                    genres: data.genres,\n                    title: data.title,\n                    overview: data.overview,\n                    backdrop: data.backdrop_path,\n                };\n                setOneMovie(details);\n            });\n    }\n\n    const handleCloseDetails = () => {\n        //close details window\n        document.querySelector('div.details').classList.remove('active');\n    }\n\n    return (\n        <SearchMovie.Provider value={{ getClickedMovie, oneMovie, handleCloseDetails }}>\n            {props.children}\n        </SearchMovie.Provider>\n    );\n}\n\nexport default SearchMovieProvider;","import React, { useContext } from 'react';\nimport '../styles/Home.css';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { GetData } from '../contexts/GetDataContext';\nimport Spinner from './Spinner';\nimport { SearchMovie } from '../contexts/SearchMovieContext';\n\nconst Home = () => {\n\n    const { homeMovies, isInited } = useContext(GetData);\n    const { getClickedMovie } = useContext(SearchMovie);\n\n    const movie = homeMovies?.map(item => {\n        if (item.backdrop_path) {\n            const { backdrop_path, title, id } = item;\n            return (\n                <div key={id}>\n                    <img src={`https://image.tmdb.org/t/p/original/` + backdrop_path} alt={title} />\n                    <h4>{title}</h4>\n                    <h5 onClick={() => getClickedMovie(id)}>See details</h5>\n                </div>\n            )\n        } else return null;\n    });\n    return (\n        <>\n            {isInited ? (\n                <div className='movie'>\n                    <ul className=\"list\">\n                        <Carousel\n                            showIndicators={false}\n                            showThumbs={false}\n                            showStatus={false}\n                            infiniteLoop={true}\n                            autoPlay={true}>{movie}\n                        </Carousel>\n                    </ul>\n                </div >\n            ) : <Spinner />}\n        </>\n    );\n}\n\nexport default Home;","import React, { useContext } from 'react';\nimport '../styles/SeeDetails.css'\nimport reactImage from '../img/react.png'\nimport { SearchMovie } from '../contexts/SearchMovieContext';\n\nconst seeDetails = () => {\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { oneMovie, handleCloseDetails } = useContext(SearchMovie);\n\n    let genresInfo;\n\n    if (oneMovie.genres) {\n        if (oneMovie.genres[0]) genresInfo = oneMovie.genres[0].name;\n        if (oneMovie.genres[1]) genresInfo = oneMovie.genres[0].name + `, ` + oneMovie.genres[1].name;\n        if (oneMovie.genres[2]) genresInfo = oneMovie.genres[0].name + `, ` + oneMovie.genres[1].name;\n    }\n\n    let details = oneMovie.length !== 0 ? <div style={oneMovie.backdrop ? {\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${oneMovie.backdrop})`\n    } : {\n            backgroundImage: reactImage\n        }} className='details'>\n\n        <div className=\"black-background\">\n            <i onClick={handleCloseDetails} className=\"fas fa-long-arrow-alt-left\"></i>\n            <h1>{oneMovie.title}</h1>\n            <h2>{oneMovie.overview}</h2>\n            <div className=\"other-info\">\n                <p>Release Date: {oneMovie.release_date ? oneMovie.release_date : `No data avaiable`}</p>\n                <p>Production: {oneMovie.production ? oneMovie.production : `No data avaiable`}</p>\n                <p>Runtime: {oneMovie.runtime ? oneMovie.runtime + ' minutes' : `No data avaiable`}</p>\n                <p>Average rating: {oneMovie.rating ? oneMovie.rating : `No data avaiable`}</p>\n                <p>Budget: {oneMovie.budget ? oneMovie.budget + ' $' : `No data avaiable`} </p>\n                <p>Revenue: {oneMovie.revenue ? oneMovie.revenue : `No data avaiable`}</p>\n                <p>Genres: {genresInfo ? genresInfo : 'No data avaiable'}</p>\n            </div>\n        </div>\n    </div> : null\n\n    return (\n        <>\n            {details}\n        </>\n    );\n}\n\nexport default seeDetails;","export const settings = {\n    dots: false,\n    slidesToShow: 5,\n    speed: 400,\n    slidesToScroll: 2,\n\n    responsive: [\n        {\n            breakpoint: 1500,\n            settings: {\n                slidesToShow: 4,\n                slidesToScroll: 1\n            }\n        },\n        {\n            breakpoint: 1200,\n            settings: {\n                slidesToShow: 3,\n                slidesToScroll: 1\n            }\n        },\n        {\n            breakpoint: 700,\n            settings: {\n                slidesToShow: 2,\n                slidesToScroll: 1\n            }\n        },\n        {\n            breakpoint: 550,\n            settings: {\n                slidesToShow: 1,\n                slidesToScroll: 1\n            }\n        }\n    ]\n};","import React, { useContext } from 'react';\nimport '../styles/Upcoming.css';\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { settings } from '../CarouselSettings/CarouselSettings';\nimport { GetData } from '../contexts/GetDataContext';\nimport { SearchMovie } from '../contexts/SearchMovieContext';\n\nconst Upcoming = () => {\n\n    let movie;\n\n    const { genres, upcomingMovies } = useContext(GetData);\n    const { getClickedMovie } = useContext(SearchMovie);\n\n    if (upcomingMovies.length !== 0 && genres.length !== 0) {\n        movie = upcomingMovies.results.map(movie => {\n            let index;\n            index = genres.findIndex(item => item.id === movie.genre_ids[0])\n            if (movie.poster_path) {\n                return (\n                    <div className='movie-item' key={movie.id}>\n                        <p className=\"movie-genres\">{genres[index]?.name}</p>\n                        <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"\" />\n                        <p onClick={() => getClickedMovie(movie.id)} className='movie-title'>{movie.title}</p>\n                    </div>\n                )\n            } else return null\n        })\n    }\n    return (\n        <div className=\"all\">\n            <h2 className=\"name\">Upcoming</h2>\n            <ul>\n                <Slider  {...settings}>\n                    {movie}\n                </Slider>\n            </ul>\n        </div>\n    );\n}\nexport default Upcoming;","import React, { useContext } from 'react';\nimport '../styles/Upcoming.css';\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { settings } from '../CarouselSettings/CarouselSettings';\nimport { GetData } from '../contexts/GetDataContext';\nimport { SearchMovie } from '../contexts/SearchMovieContext';\n\nconst Popular = () => {\n\n    let movie;\n\n    const { genres, popularMovies } = useContext(GetData);\n    const { getClickedMovie } = useContext(SearchMovie);\n\n    if (popularMovies.length !== 0 && genres.length !== 0) {\n        movie = popularMovies.results.map(movie => {\n            let index = genres.findIndex(item => item.id === movie.genre_ids[0])\n            if (index === -1) index = 0;\n            if (movie.poster_path) {\n                return (\n                    <div className='movie-item' key={movie.id}>\n                        <p className=\"movie-genres\">{genres[index].name}</p>\n                        <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"\" />\n                        <p onClick={() => getClickedMovie(movie.id)} className='movie-title'>{movie.title}</p>\n                    </div>\n                )\n            } else return null;\n        })\n    }\n    return (\n        <div className=\"all\">\n            <h2 className=\"name popular\">Popular</h2>\n            <ul>\n                <Slider  {...settings}>\n                    {movie}\n                </Slider>\n            </ul>\n        </div>\n    );\n}\n\nexport default Popular;","import React, { useContext } from 'react';\nimport '../styles/Upcoming.css';\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { settings } from '../CarouselSettings/CarouselSettings';\nimport { GetData } from '../contexts/GetDataContext';\nimport { SearchMovie } from '../contexts/SearchMovieContext';\n\nconst TopRated = () => {\n\n    let movie;\n\n    const { genres, topRated } = useContext(GetData);\n    const { getClickedMovie } = useContext(SearchMovie);\n\n    if (topRated.length !== 0 && genres.length !== 0) {\n\n        movie = topRated.results.map(movie => {\n            let index;\n            index = genres.findIndex(item => item.id === movie.genre_ids[0])\n\n            if (movie.poster_path) {\n                return (\n                    <div className='movie-item' key={movie.id}>\n                        <p className=\"movie-genres\">{genres[index].name}</p>\n                        <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"\" />\n                        <p onClick={() => getClickedMovie(movie.id)} className='movie-title'>{movie.title}</p>\n                    </div>\n                )\n            } else return null\n        })\n    }\n    return (\n        <div className=\"all\">\n            <h2 className=\"name\">Top Rated</h2>\n            <ul>\n                <Slider  {...settings}>\n                    {movie}\n                </Slider>\n            </ul>\n        </div>\n    );\n}\nexport default TopRated;","import React, { useContext } from 'react';\nimport '../styles/Upcoming.css';\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { settings } from '../CarouselSettings/CarouselSettings';\nimport { GetData } from '../contexts/GetDataContext';\nimport { SearchMovie } from '../contexts/SearchMovieContext';\n\nconst MoviesWithTomHanks = () => {\n\n    let movie;\n\n    const { genres, moviesWithTomHanks } = useContext(GetData);\n    const { getClickedMovie } = useContext(SearchMovie);\n\n    if (moviesWithTomHanks.length !== 0 && genres.length !== 0) {\n        movie = moviesWithTomHanks.map(movie => {\n            let index = genres.findIndex(item => item.id === movie.genre_ids[0])\n            if (index === -1) index = 0;\n            if (movie.poster_path && movie.title) {\n                return (\n                    <div className='movie-item' key={movie.id}>\n                        <p className=\"movie-genres\">{genres[index].name}</p>\n                        <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"\" />\n                        <p onClick={() => getClickedMovie(movie.id)} className='movie-title'>{movie.title}</p>\n                    </div>\n                )\n            } else return null;\n        })\n    }\n\n    return (\n        <div className=\"all\">\n            <h2 className=\"name hanks\">Movies with Tom Hanks</h2>\n            <ul>\n                <Slider  {...settings}>\n                    {movie}\n                </Slider>\n            </ul>\n        </div>\n    );\n}\nexport default MoviesWithTomHanks;","import React, { createContext, useState } from 'react';\n\nexport const FormContext = createContext();\n\nconst FormContextProvider = (props) => {\n\n    const [inputValue, setInputValue] = useState('');\n    const [searchMovies, setSearchMovies] = useState([]);\n\n    const handleSearch = () => {\n        if (inputValue !== '') {\n            document.querySelector('i.fa-long-arrow-alt-left').style.display = 'block';\n            const URL = `https://api.themoviedb.org/3/search/movie?api_key=30406056042449abcb3b86e3f1b631cd&language=en-US&query=${inputValue}&page=1&include_adult=false`;\n\n            fetch(URL)\n                .then(res => res.json())\n                .then(data => {\n                    setSearchMovies(data);\n                });\n        } else {\n            window.location.href = '';\n            alert('Type something !');\n        };\n    }\n\n    const preventRefresh = e => {\n        e.preventDefault();\n    }\n\n    return (\n        <FormContext.Provider value={{ inputValue, setInputValue, handleSearch, searchMovies, preventRefresh }}>\n            {props.children}\n        </FormContext.Provider>\n    );\n}\n\nexport default FormContextProvider;","import React, { useContext } from 'react';\nimport '../styles/SearchList.css'\nimport { GetData } from '../contexts/GetDataContext';\nimport { FormContext } from '../contexts/FormContext';\nimport { SearchMovie } from '../contexts/SearchMovieContext';\n\n\nconst SearchList = () => {\n\n    const { searchMovies } = useContext(FormContext);\n    const { getClickedMovie } = useContext(SearchMovie);\n\n    const { genres } = useContext(GetData);\n\n    const result = searchMovies.length !== 0 ? searchMovies.results.map(movie => {\n        let index = genres.findIndex(item => item.id === movie.genre_ids[0])\n        if (index === -1) index = 0;\n        if (movie.poster_path) {\n            return (\n                <div className='movie-item search' key={movie.id}>\n                    <p className=\"movie-genres search\">{genres[index].name}</p>\n                    <img onClick={() => getClickedMovie(movie.id)} src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"\" />\n                    <p onClick={() => getClickedMovie(movie.id)} className='movie-title search'>{movie.title}</p>\n                </div>\n            )\n        } else return null\n    }\n    ) : null;\n\n    return (\n        <div className=\"search-list\">\n            {result}\n        </div>\n    );\n}\n\nexport default SearchList;","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormContext } from '../contexts/FormContext';\n\nconst Form = () => {\n\n    const { inputValue, setInputValue, handleSearch, preventRefresh } = useContext(FormContext);\n\n    return (\n        <>\n            <form onSubmit={preventRefresh}>\n                <input onChange={e => setInputValue(e.target.value)} value={inputValue} placeholder='Search' type=\"text\" />\n                <Link to='/search'><i onClick={handleSearch} className={inputValue ? 'fas fa-search active' : 'fas fa-search'}></i></Link>\n            </form>\n        </>\n    );\n}\n\nexport default Form;","import React from 'react';\nimport '../styles/Footer.css'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <div className=\"logo\">\n                <img src=\"https://www.themoviedb.org/assets/2/v4/logos/powered-by-rectangle-green-dcada16968ed648d5eb3b36bbcfdd8cdf804f723dcca775c8f2bf4cea025aad6.svg\" alt=\"\" />\n            </div>\n            <p className=\"credits\">\n                This product uses the TMDb API but is not endorsed or certified by TMDb.\n            </p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport '../styles/App.css';\nimport Home from './Home';\nimport SeeDetails from './SeeDetails';\nimport Upcoming from './Upcoming';\nimport Popular from './Popular';\nimport TopRated from './TopRated';\nimport MoviesWithTomHanks from './MoviesWithTomHanks';\nimport SearchList from './SearchList';\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\nimport Form from './Form';\nimport Footer from './Footer';\nimport GetDataProvider from '../contexts/GetDataContext';\nimport SearchMovieProvider from '../contexts/SearchMovieContext';\nimport FormContextProvider from '../contexts/FormContext';\n\nconst App = () => {\n\n   const handleCloseBackButton = () => {\n      document.querySelector('i.fa-long-arrow-alt-left').style.display = 'none';\n   }\n\n   return (\n      <>\n         <GetDataProvider>\n            <SearchMovieProvider>\n               <FormContextProvider>\n                  <BrowserRouter>\n                     <nav>\n                        <Link className='arrow' to='/' onClick={handleCloseBackButton}>\n                           <i className=\"fas fa-long-arrow-alt-left\"></i>\n                        </Link>\n                        <Form />\n                     </nav>\n                     <Switch>\n                        <Route path='/search' render={() => {\n                           return (\n                              <>\n                                 <SeeDetails />\n                                 <SearchList />\n                              </>\n                           )\n                        }} />\n                        <Route path='/' render={() => {\n                           return (\n                              <>\n                                 <Home />\n                                 <SeeDetails />\n                                 <Upcoming />\n                                 <Popular />\n                                 <TopRated />\n                                 <MoviesWithTomHanks />\n                                 <Footer />\n                              </>\n                           )\n                        }} />\n                     </Switch>\n                  </BrowserRouter>\n               </FormContextProvider>\n            </SearchMovieProvider>\n         </GetDataProvider>\n      </>\n   )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}