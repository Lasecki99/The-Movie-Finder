{"version":3,"sources":["img/react.png","components/Home.js","components/SeeDetails.js","components/Upcoming.js","components/Popular.js","components/TopRated.js","components/Spinner.js","components/MoviesWithTomHanks.js","components/SearchList.js","components/Form.js","components/Footer.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","state","_this2","this","movie","props","movies","map","item","backdrop_path","react_default","a","createElement","key","id","src","alt","title","onClick","className","lib","showIndicators","showThumbs","showStatus","infiniteLoop","autoPlay","Component","seeDetails","genresInfo","_props$movie","overview","release_date","production","rating","genres","revenue","budget","runtime","backdrop","name","details","length","style","backgroundImage","concat","reactImage","close","Fragment","Upcoming","results","index","findIndex","genre_ids","poster_path","react_slick_lib_default","dots","slidesToShow","speed","slidesToScroll","responsive","breakpoint","settings","Popular","TopRated","Spinner","MoviesWithTomHanks","SearchList","result","Form","inputValue","searchMovies","handleInput","e","_this","setState","target","value","handleSearch","document","querySelector","display","URL","fetch","then","response","json","data","alert","handleNoRefresh","preventDefault","prevProps","prevState","onSubmit","onChange","placeholder","type","react_router_dom","to","Footer","App","homeMovies","movieID","oneMovie","upcomingMovies","popularMovies","topRated","moviesWithTomHanks","getHomeMovies","getGenresList","getMoviesWithTomHanks","cast","getUpcomingMovies","getPopularMovies","getTopRatedMovies","handleGetID","classList","add","undefined","production_companies","vote_average","handleCloseDetails","remove","handleCloseBackButton","handleSearchMovies","_this$state","content","components_Form","react_router","path","render","components_SeeDetails","components_SearchList","components_Home","components_Upcoming","components_Popular","components_TopRated","components_MoviesWithTomHanks","components_Footer","components_Spinner","ReactDOM","components_App","getElementById"],"mappings":"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","file":"static/js/main.fd70e96e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react.b03c571c.png\";","import React, { Component } from 'react';\r\nimport '../styles/Home.css'\r\nimport { Carousel } from 'react-responsive-carousel'\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    state = {}\r\n\r\n    render() {\r\n\r\n        const movie = this.props.movies.map(item => {\r\n\r\n            if (item.backdrop_path) {\r\n                return (\r\n\r\n                    <div key={item.id}>\r\n\r\n                        <img src={`https://image.tmdb.org/t/p/original/` + item.backdrop_path} alt=\"\" />\r\n\r\n                        <h4>{item.title}</h4>\r\n                        <h5 onClick={() => this.props.id(item.id)}>See details</h5>\r\n\r\n\r\n\r\n                    </div>\r\n                )\r\n            } else return null\r\n        })\r\n\r\n        return (\r\n\r\n            <div className='movie'>\r\n                <ul className=\"list\">\r\n                    <Carousel\r\n                        showIndicators={false}\r\n                        showThumbs={false}\r\n                        showStatus={false}\r\n                        infiniteLoop={true}\r\n                        autoPlay={true}>\r\n\r\n\r\n                        {movie}\r\n\r\n                    </Carousel>\r\n                </ul>\r\n            </div >\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport '../styles/SeeDetails.css'\r\nimport reactImage from '../img/react.png'\r\n\r\nconst seeDetails = (props) => {\r\n\r\n\r\n    const { title, overview, release_date, production, rating, genres, revenue, budget, runtime, backdrop } = props.movie\r\n\r\n    let genresInfo;\r\n\r\n    if (genres) {\r\n        if (genres[0]) {\r\n            genresInfo = genres[0].name\r\n        }\r\n        if (genres[1]) {\r\n            genresInfo = genres[0].name + `, ` + genres[1].name\r\n        }\r\n        if (genres[2]) {\r\n            genresInfo = genres[0].name + `, ` + genres[1].name + `, ` + genres[2].name\r\n        }\r\n    }\r\n\r\n    let details = props.movie.length !== 0 ? <div style={backdrop ? {\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${backdrop})`\r\n    } : {\r\n            backgroundImage: reactImage\r\n        }} className='details'>\r\n\r\n        <div className=\"black-background\">\r\n\r\n            <i onClick={props.close} className=\"fas fa-long-arrow-alt-left\"></i>\r\n            <h1>{title}</h1>\r\n            <h2>{overview}</h2>\r\n            <div className=\"other-info\">\r\n                <p>Release Date: {release_date ? release_date : `No data avaiable`}</p>\r\n                <p>Production: {production ? production : `No data avaiable`}</p>\r\n                <p>Runtime: {runtime ? runtime + ' minutes' : `No data avaiable`}</p>\r\n                <p>Average rating: {rating ? rating : `No data avaiable`}</p>\r\n                <p>Budget: {budget ? budget + ' $' : `No data avaiable`} </p>\r\n                <p>Revenue: {revenue ? revenue : `No data avaiable`}</p>\r\n                <p>Genres: {genresInfo ? genresInfo : 'No data avaiable'}</p>\r\n\r\n            </div>\r\n        </div>\r\n    </div> : null\r\n\r\n    return (\r\n        <>\r\n            {details}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default seeDetails;","import React from 'react';\r\nimport '../styles/Upcoming.css'\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\nconst Upcoming = (props) => {\r\n\r\n    let movie;\r\n\r\n    const settings = {\r\n        dots: false,\r\n        slidesToShow: 5,\r\n        speed: 400,\r\n        slidesToScroll: 2,\r\n\r\n        responsive: [\r\n            {\r\n                breakpoint: 1500,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 700,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 550,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    if (props.movies.length !== 0 && props.genres.length !== 0) {\r\n        movie = props.movies.results.map(movie => {\r\n            let index;\r\n            index = props.genres.genres.findIndex(item => item.id === movie.genre_ids[0])\r\n            if (movie.poster_path) {\r\n                return (\r\n                    <div className='movie-item' key={movie.id}>\r\n                        <p className=\"movie-genres\">{props.genres.genres[index].name}</p>\r\n                        <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"\" />\r\n                        <p onClick={() => props.id(movie.id)} className='movie-title'>{movie.title}</p>\r\n                    </div>\r\n                )\r\n            } else return null\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"all\">\r\n            <h2 className=\"name\">Upcoming</h2>\r\n            <ul>\r\n                <Slider  {...settings}>\r\n                    {movie}\r\n                </Slider>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nexport default Upcoming;","import React from 'react';\r\nimport '../styles/Upcoming.css'\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst Popular = (props) => {\r\n\r\n    let movie;\r\n\r\n    const settings = {\r\n        dots: false,\r\n        slidesToShow: 5,\r\n        speed: 400,\r\n        slidesToScroll: 2,\r\n\r\n        responsive: [\r\n            {\r\n                breakpoint: 1500,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 700,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 550,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n\r\n    if (props.movies.length !== 0 && props.genres.length !== 0) {\r\n\r\n        movie = props.movies.results.map(movie => {\r\n\r\n            let index = props.genres.genres.findIndex(item => item.id === movie.genre_ids[0])\r\n\r\n\r\n            if (index === -1) {\r\n                index = 0\r\n            }\r\n\r\n            if (movie.poster_path) {\r\n                return (\r\n                    <div className='movie-item' key={movie.id}>\r\n\r\n                        <p className=\"movie-genres\">{props.genres.genres[index].name}</p>\r\n\r\n                        <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"\" />\r\n\r\n\r\n\r\n                        <p onClick={() => props.id(movie.id)} className='movie-title'>{movie.title}</p>\r\n                    </div>\r\n                )\r\n            } else return null\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"all\">\r\n            <h2 className=\"name popular\">Popular</h2>\r\n            <ul>\r\n                <Slider  {...settings}>\r\n                    {movie}\r\n                </Slider>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nexport default Popular;","import React from 'react';\r\nimport '../styles/Upcoming.css'\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst TopRated = (props) => {\r\n\r\n    let movie;\r\n\r\n    const settings = {\r\n        dots: false,\r\n        slidesToShow: 5,\r\n        speed: 400,\r\n        slidesToScroll: 2,\r\n\r\n        responsive: [\r\n            {\r\n                breakpoint: 1500,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 700,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 550,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    if (props.movies.length !== 0 && props.genres.length !== 0) {\r\n\r\n        movie = props.movies.results.map(movie => {\r\n            let index;\r\n            index = props.genres.genres.findIndex(item => item.id === movie.genre_ids[0])\r\n\r\n            if (movie.poster_path) {\r\n                return (\r\n                    <div className='movie-item' key={movie.id}>\r\n                        <p className=\"movie-genres\">{props.genres.genres[index].name}</p>\r\n                        <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"\" />\r\n                        <p onClick={() => props.id(movie.id)} className='movie-title'>{movie.title}</p>\r\n                    </div>\r\n                )\r\n            } else return null\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"all\">\r\n            <h2 className=\"name\">Top Rated</h2>\r\n            <ul>\r\n                <Slider  {...settings}>\r\n                    {movie}\r\n                </Slider>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nexport default TopRated;","import React from 'react';\r\nimport '../styles/Spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"background-spinner\">\r\n            <div className=\"loader\">Loading...</div>\r\n        </div>\r\n    );\r\n}\r\nexport default Spinner;","import React from 'react';\r\nimport '../styles/Upcoming.css'\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst MoviesWithTomHanks = (props) => {\r\n\r\n    let movie;\r\n\r\n    const settings = {\r\n        dots: false,\r\n        slidesToShow: 5,\r\n        speed: 400,\r\n        slidesToScroll: 2,\r\n\r\n        responsive: [\r\n            {\r\n                breakpoint: 1500,\r\n                settings: {\r\n                    slidesToShow: 4,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 1200,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 700,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 1\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 550,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    if (props.movies.length !== 0 && props.genres.length !== 0) {\r\n\r\n        movie = props.movies.map(movie => {\r\n\r\n            let index = props.genres.genres.findIndex(item => item.id === movie.genre_ids[0])\r\n\r\n            if (index === -1) {\r\n                index = 0\r\n            }\r\n\r\n            if (movie.poster_path) {\r\n                return (\r\n                    <div className='movie-item' key={movie.id}>\r\n\r\n                        <p className=\"movie-genres\">{props.genres.genres[index].name}</p>\r\n\r\n                        <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"\" />\r\n\r\n\r\n\r\n                        <p onClick={() => props.id(movie.id)} className='movie-title'>{movie.title}</p>\r\n                    </div>\r\n                )\r\n            } else return null\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"all\">\r\n            <h2 className=\"name hanks\">Movies with Tom Hanks</h2>\r\n            <ul>\r\n                <Slider  {...settings}>\r\n                    {movie}\r\n                </Slider>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nexport default MoviesWithTomHanks;","import React from 'react';\r\nimport '../styles/SearchList.css'\r\n\r\n\r\nconst SearchList = (props) => {\r\n\r\n    const result = props.movies.length !== 0 ? props.movies.results.map(movie => {\r\n\r\n        let index = props.genres.genres.findIndex(item => item.id === movie.genre_ids[0])\r\n\r\n        if (index === -1) {\r\n            index = 0\r\n        }\r\n\r\n        if (movie.poster_path) {\r\n            return (\r\n                <div className='movie-item search' key={movie.id}>\r\n                    <p className=\"movie-genres search\">{props.genres.genres[index].name}</p>\r\n                    <img onClick={() => props.id(movie.id)} src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} alt=\"\" />\r\n                    <p onClick={() => props.id(movie.id)} className='movie-title search'>{movie.title}</p>\r\n                </div>\r\n            )\r\n        } else return null\r\n    }\r\n    ) : null\r\n\r\n    return (\r\n        <div className=\"search-list\">\r\n            {result}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchList;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        inputValue: '',\r\n        searchMovies: [],\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (this.state.searchMovies !== prevState.searchMovies) {\r\n            this.props.movies(this.state.searchMovies)\r\n        }\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            inputValue: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSearch = () => {\r\n\r\n        if (this.state.inputValue !== '') {\r\n\r\n            document.querySelector('i.fa-long-arrow-alt-left').style.display = 'block'\r\n\r\n            const URL = `https://api.themoviedb.org/3/search/movie?api_key=30406056042449abcb3b86e3f1b631cd&language=en-US&query=${this.state.inputValue}&page=1&include_adult=false`\r\n\r\n            fetch(URL)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        searchMovies: data\r\n                    })\r\n                })\r\n        } else alert('Type something !')\r\n\r\n    }\r\n\r\n    handleNoRefresh = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <form onSubmit={this.handleNoRefresh} >\r\n                    <input onChange={this.handleInput} value={this.state.inputValue} placeholder='Search' type=\"text\" />\r\n\r\n\r\n                    <Link to='/search'   ><i onClick={this.handleSearch} className=\"fas fa-search\"></i></Link>\r\n                </form>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport '../styles/Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n\r\n        <footer>\r\n\r\n            <div className=\"logo\">\r\n                <img src=\"https://www.themoviedb.org/assets/2/v4/logos/powered-by-rectangle-green-dcada16968ed648d5eb3b36bbcfdd8cdf804f723dcca775c8f2bf4cea025aad6.svg\" alt=\"\" />\r\n            </div>\r\n\r\n            <p className=\"credits\">\r\n                This product uses the TMDb API but is not endorsed or certified by TMDb.\r\n            </p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport Home from './Home'\nimport SeeDetails from './SeeDetails'\nimport Upcoming from './Upcoming'\nimport Popular from './Popular'\nimport TopRated from './TopRated'\nimport Spinner from './Spinner'\nimport MoviesWithTomHanks from './MoviesWithTomHanks'\nimport SearchList from './SearchList'\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom'\nimport Form from './Form';\nimport Footer from './Footer'\n\n\nclass App extends Component {\n\n   state = {\n      searchMovies: [],\n      homeMovies: [],\n      genres: [],\n      movieID: '',\n      oneMovie: ['1'],\n      upcomingMovies: [],\n      popularMovies: [],\n      topRated: [],\n      moviesWithTomHanks: [],\n   }\n\n   componentWillMount() {\n      this.getHomeMovies();\n      this.getGenresList();\n      this.getUpcomingMovies();\n      this.getPopularMovies();\n      this.getTopRatedMovies();\n      this.getMoviesWithTomHanks();\n   }\n\n\n   getHomeMovies = () => {\n\n      const URL = `https://api.themoviedb.org/3/movie/now_playing?api_key=30406056042449abcb3b86e3f1b631cd&language=en-US&page=1.json`\n\n      fetch(URL)\n         .then(response => response.json())\n         .then(data => {\n            this.setState({\n               homeMovies: data.results\n            })\n         })\n   }\n\n   getGenresList = () => {\n      const URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=30406056042449abcb3b86e3f1b631cd&language=en-US.json`\n\n      fetch(URL)\n         .then(response => response.json())\n         .then(data => {\n\n            this.setState({\n               genres: data\n            })\n         })\n   }\n\n   getMoviesWithTomHanks = () => {\n      const URL = `https://api.themoviedb.org/3/person/31/combined_credits?api_key=30406056042449abcb3b86e3f1b631cd&language=en-US`\n\n      fetch(URL)\n         .then(response => response.json())\n         .then(data => {\n\n            this.setState({\n               moviesWithTomHanks: data.cast\n            })\n         })\n   }\n\n   getUpcomingMovies = () => {\n\n      const URL = `https://api.themoviedb.org/3/movie/upcoming?api_key=30406056042449abcb3b86e3f1b631cd&language=en-US&page=1`\n\n      fetch(URL)\n         .then(response => response.json())\n         .then(data => {\n            this.setState({\n               upcomingMovies: data\n            })\n         })\n   }\n\n   getPopularMovies = () => {\n      const URL = `https://api.themoviedb.org/3/movie/popular?api_key=30406056042449abcb3b86e3f1b631cd&language=en-US&page=1`\n\n      fetch(URL)\n         .then(response => response.json())\n         .then(data => {\n            this.setState({\n               popularMovies: data\n            })\n         })\n   }\n\n   getTopRatedMovies = () => {\n      const URL = `https://api.themoviedb.org/3/movie/top_rated?api_key=30406056042449abcb3b86e3f1b631cd&language=en-US&page=1`\n\n      fetch(URL)\n         .then(response => response.json())\n         .then(data => {\n            this.setState({\n               topRated: data\n            })\n         })\n   }\n\n   handleGetID = (movieID) => {\n\n      document.querySelector('div.details').classList.add('active')\n\n      const URL = `https://api.themoviedb.org/3/movie/${movieID}?api_key=30406056042449abcb3b86e3f1b631cd&language=en-US`\n\n      fetch(URL)\n         .then(response => response.json())\n         .then(data => {\n\n            const details = {\n               release_date: data.release_date,\n\n               production: data.production_companies[0] === undefined ? null : data.production_companies[0].name,\n\n               runtime: data.runtime,\n               rating: data.vote_average,\n               budget: data.budget,\n               revenue: data.revenue,\n               genres: data.genres,\n               title: data.title,\n               overview: data.overview,\n               backdrop: data.backdrop_path,\n            }\n\n\n            this.setState({\n               oneMovie: details,\n               movieID\n            })\n         })\n\n   }\n\n\n   handleCloseDetails = () => {\n      document.querySelector('div.details').classList.remove('active')\n   }\n\n\n   handleCloseBackButton = () => {\n      document.querySelector('i.fa-long-arrow-alt-left').style.display = 'none'\n   }\n\n   handleSearchMovies = (searchMovies) => {\n      this.setState({\n         searchMovies\n      })\n\n   }\n\n   render() {\n\n      const { homeMovies, genres, popularMovies, topRated, upcomingMovies, moviesWithTomHanks } = this.state\n\n      const content = homeMovies.length !== 0 && genres.length !== 0 && popularMovies.length !== 0 && topRated.length !== 0 && upcomingMovies.length !== 0 && moviesWithTomHanks.length !== 0 ?\n\n         <>\n            <BrowserRouter>\n\n               <nav>\n\n                  <Link className='arrow' to='/' onClick={this.handleCloseBackButton}>\n                     <i className=\"fas fa-long-arrow-alt-left\"></i>\n                  </Link>\n\n                  <Form movies={this.handleSearchMovies} />\n\n               </nav>\n\n               <Switch>\n                  <Route path='/search' render={(props) => {\n                     return (\n                        <>\n                           <SeeDetails\n                              movie={this.state.oneMovie}\n                              close={this.handleCloseDetails}\n                           />\n                           <SearchList\n                              movies={this.state.searchMovies}\n                              genres={this.state.genres}\n                              id={this.handleGetID}\n                           />\n                        </>\n                     )\n                  }} />\n\n                  <Route path='/' render={(props) => {\n                     return (\n                        <>\n                           <Home\n                              movies={this.state.homeMovies}\n                              id={this.handleGetID} />\n\n                           <SeeDetails\n                              movie={this.state.oneMovie}\n                              close={this.handleCloseDetails}\n                           />\n                           <Upcoming\n                              movies={this.state.upcomingMovies}\n                              genres={this.state.genres}\n                              id={this.handleGetID}\n                           />\n                           <Popular\n                              movies={this.state.popularMovies}\n                              genres={this.state.genres}\n                              id={this.handleGetID}\n                           />\n                           <TopRated\n                              movies={this.state.topRated}\n                              genres={this.state.genres}\n                              id={this.handleGetID}\n                           />\n                           <MoviesWithTomHanks\n                              movies={this.state.moviesWithTomHanks}\n                              genres={this.state.genres}\n                              id={this.handleGetID}\n                           />\n                           <Footer />\n                        </>\n                     )\n                  }} />\n               </Switch>\n\n            </BrowserRouter>\n         </> : <Spinner />\n\n      return (\n         <>\n            {content}\n         </>\n      )\n   }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}